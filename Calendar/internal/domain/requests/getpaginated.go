package requests

import (
	"context"

	pb "github.com/Wilder60/ArtemisV2/Calendar/pkg/grpc/service"
)

// GetPagination is the request that will be generated by the calendar adapter and send to the
// storage object to be consumed This contains the data from the query params PLUS the userID
// that will be taken from the gin context
type GetPagination struct {
	Ctx    context.Context
	UserID string
	Sdate  string `form:"sdate"`
	Desc   bool   `form:"desc"`
	Limit  int    `form:"limit"`
	Offset int    `form:"offset"`
}

// NewProtoPagination will take a protobuff request and convert it to a GetPagination request
func NewProtoPagination(userID string, req *pb.GetPaginatedEventsRequest) *GetPagination {
	return &GetPagination{
		Ctx:    context.Background(),
		UserID: userID,
		Sdate:  req.Sdate,
		Desc:   req.Desc,
		Limit:  int(req.Limit),
		Offset: int(req.Offset),
	}
}

// NewGetPagination is the constructor function for the GetPagination struct
func NewGetPagination(userID string) *GetPagination {
	return &GetPagination{
		Ctx:    context.Background(),
		UserID: userID,
	}
}
